@model SupportInvestigation.Models.CustomView.AdministrationCreateUserViewModel
@{
    ViewBag.Title = "Creer un utilisateur";
}

@Html.ValidationMessage("errorModel")
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

    @using (Html.BeginForm())
    {
        @Html.ValidationSummary(true)
        <fieldset>
            <legend>Creation d'un utilisateur</legend>
            <div class="editor-label">
                @Html.LabelFor(model => model.Login)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Login)
                @Html.ValidationMessageFor(model => model.Login)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Password)
            </div>
            <div class="editor-field">
                @Html.PasswordFor(model => model.Password)
                @Html.ValidationMessageFor(model => model.Password)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Mail)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Mail)
                @Html.ValidationMessageFor(model => model.Mail)
            </div>
           
            @Html.DropDownLevelAdmin()
            @Html.ValidationMessageFor(model => model.Level)
            @Html.ValidationMessage("errorRole", new { @style = "color:red" })

            <p>
                <input type="submit" value="Create" />
            </p>
            <div>@Html.ActionLink("Retour au menu", "Index", new { }, new { @class = "btn" })</div>
        </fieldset>
    }

